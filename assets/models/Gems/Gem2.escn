[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec2 refraction_offset = vec2(0.2, 0.2);


void node_bsdf_glass(vec4 color, float roughness, float IOR, out vec3 albedo,
        out float alpha, out float specular_out, out float roughness_out,
        out float transmission_out, out float ior) {
    albedo = color.rgb;
    alpha = 0.0;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    transmission_out = 0.0;
    ior = IOR;
}


void refraction_fresnel(vec3 view_dir, vec3 normal, float ior, out float kr) {
// reference [https://www.scratchapixel.com/lessons/
// 3d-basic-rendering/introduction-to-shading/reflection-refraction-fresnel]
    float cosi = clamp(-1.0, 1.0, dot(view_dir, normal));
    float etai = 1.0, etat = ior;
    if (cosi > 0.0) {
        float tmp = etai;
        etai = etat;
        etat = tmp;
    }
    // Compute sini using Snell's law
    float sint = etai / etat * sqrt(max(0.0, 1.0 - cosi * cosi));
    // Total internal reflection
    if (sint >= 1.0) {
        kr = 1.0;
    }
    else {
        float cost = sqrt(max(0.0, 1.0 - sint * sint));
        cosi = abs(cosi);
        float Rs = ((etat * cosi) - (etai * cost))
                    / ((etat * cosi) + (etai * cost));
        float Rp = ((etai * cosi) - (etat * cost))
                    / ((etai * cosi) + (etat * cost));
        kr = (Rs * Rs + Rp * Rp) * 0.5;
    }
}

void vertex () {
}

void fragment () {
	
	// node: 'Glass BSDF'
	// type: 'ShaderNodeBsdfGlass'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.018566636368632317, 0.5684185028076172,
		0.8000020980834961, 1.0);
	float node0_in1_roughness = float(0.0);
	float node0_in2_ior = float(1.4500000476837158);
	vec3 node0_in3_normal = NORMAL;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_alpha;
	float node0_bsdf_out2_specular;
	float node0_bsdf_out3_roughness;
	float node0_bsdf_out4_transmission;
	float node0_bsdf_out5_ior;
	
	node_bsdf_glass(node0_in0_color, node0_in1_roughness, node0_in2_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_alpha, node0_bsdf_out2_specular,
		node0_bsdf_out3_roughness, node0_bsdf_out4_transmission, node0_bsdf_out5_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SPECULAR = node0_bsdf_out2_specular;
	ROUGHNESS = node0_bsdf_out3_roughness;
	NORMAL = node0_in3_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out4_transmission;
	refraction_fresnel(VERTEX, NORMAL, node0_bsdf_out5_ior, node0_bsdf_out1_alpha);
	EMISSION += textureLod(SCREEN_TEXTURE, SCREEN_UV - NORMAL.xy * refraction_offset
		, ROUGHNESS).rgb * (1.0 - node0_bsdf_out1_alpha);
	ALBEDO *= node0_bsdf_out1_alpha;
	ALPHA = 1.0;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cube002"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0325639, -0.338049, 0.0325639, -0.13566, -0.0269598, 0.260559, -0.0325639, -0.338049, 0.0325639, -0.231641, 0.0936437, -0.120603, -0.260559, -0.0269598, 0.13566, -0.231641, 0.0936437, 0.120603, 0.120603, 0.204681, -0.120603, -0.120603, 0.204681, 0.120603, 0.120603, 0.204681, 0.120603, 0.0325639, -0.338049, -0.0325639, 0.260559, -0.0269598, 0.13566, 0.0325639, -0.338049, 0.0325639, -0.120603, 0.0936437, 0.231641, -0.120603, 0.204681, 0.120603, -0.231641, 0.0936437, 0.120603, -0.260559, -0.0269598, -0.13566, -0.0325639, -0.338049, 0.0325639, -0.260559, -0.0269598, 0.13566, -0.120603, 0.204681, -0.120603, -0.120603, 0.0936437, -0.231641, -0.231641, 0.0936437, -0.120603, 0.13566, -0.0269598, 0.260559, 0.0325639, -0.338049, 0.0325639, 0.260559, -0.0269598, 0.13566, 0.120603, 0.204681, 0.120603, 0.120603, 0.0936437, 0.231641, 0.231641, 0.0936437, 0.120603, 0.120603, 0.204681, -0.120603, 0.231641, 0.0936437, -0.120603, 0.120603, 0.0936437, -0.231641, -0.120603, 0.0936437, 0.231641, -0.260559, -0.0269598, 0.13566, -0.13566, -0.0269598, 0.260559, -0.120603, 0.204681, -0.120603, -0.231641, 0.0936437, 0.120603, -0.120603, 0.204681, 0.120603, -0.0325639, -0.338049, -0.0325639, 0.13566, -0.0269598, -0.260559, 0.0325639, -0.338049, -0.0325639, 0.120603, 0.204681, -0.120603, -0.120603, 0.0936437, -0.231641, -0.120603, 0.204681, -0.120603, 0.120603, 0.204681, 0.120603, 0.231641, 0.0936437, -0.120603, 0.120603, 0.204681, -0.120603, 0.260559, -0.0269598, -0.13566, 0.0325639, -0.338049, -0.0325639, 0.13566, -0.0269598, -0.260559, -0.120603, 0.204681, 0.120603, 0.120603, 0.0936437, 0.231641, 0.120603, 0.204681, 0.120603, 0.13566, -0.0269598, 0.260559, 0.231641, 0.0936437, 0.120603, 0.120603, 0.0936437, 0.231641, 0.260559, -0.0269598, -0.13566, 0.120603, 0.0936437, -0.231641, 0.231641, 0.0936437, -0.120603, -0.13566, -0.0269598, -0.260559, -0.231641, 0.0936437, -0.120603, -0.120603, 0.0936437, -0.231641, -0.13566, -0.0269598, -0.260559, -0.0325639, -0.338049, -0.0325639, -0.260559, -0.0269598, -0.13566, 0.120603, 0.0936437, -0.231641, -0.13566, -0.0269598, -0.260559, -0.120603, 0.0936437, -0.231641, -0.120603, 0.0936437, 0.231641, 0.13566, -0.0269598, 0.260559, 0.120603, 0.0936437, 0.231641, 0.231641, 0.0936437, 0.120603, 0.260559, -0.0269598, -0.13566, 0.231641, 0.0936437, -0.120603, -0.0325639, -0.338049, -0.0325639, 0.0325639, -0.338049, 0.0325639, -0.0325639, -0.338049, 0.0325639, -0.260559, -0.0269598, 0.13566, -0.0325639, -0.338049, 0.0325639, -0.13566, -0.0269598, 0.260559, 0.0325639, -0.338049, 0.0325639, 0.13566, -0.0269598, 0.260559, -0.13566, -0.0269598, 0.260559, -0.231641, 0.0936437, -0.120603, -0.260559, -0.0269598, -0.13566, -0.260559, -0.0269598, 0.13566, -0.120603, 0.204681, -0.120603, 0.0325639, -0.338049, -0.0325639, 0.260559, -0.0269598, -0.13566, 0.260559, -0.0269598, 0.13566, -0.260559, -0.0269598, -0.13566, -0.0325639, -0.338049, -0.0325639, -0.0325639, -0.338049, 0.0325639, -0.120603, 0.0936437, 0.231641, -0.231641, 0.0936437, 0.120603, -0.260559, -0.0269598, 0.13566, -0.120603, 0.204681, -0.120603, -0.231641, 0.0936437, -0.120603, -0.231641, 0.0936437, 0.120603, -0.0325639, -0.338049, -0.0325639, -0.13566, -0.0269598, -0.260559, 0.13566, -0.0269598, -0.260559, 0.120603, 0.204681, -0.120603, 0.120603, 0.0936437, -0.231641, -0.120603, 0.0936437, -0.231641, 0.120603, 0.204681, 0.120603, 0.231641, 0.0936437, 0.120603, 0.231641, 0.0936437, -0.120603, -0.120603, 0.204681, 0.120603, -0.120603, 0.0936437, 0.231641, 0.120603, 0.0936437, 0.231641, 0.13566, -0.0269598, 0.260559, 0.260559, -0.0269598, 0.13566, 0.231641, 0.0936437, 0.120603, 0.260559, -0.0269598, -0.13566, 0.13566, -0.0269598, -0.260559, 0.120603, 0.0936437, -0.231641, -0.13566, -0.0269598, -0.260559, -0.260559, -0.0269598, -0.13566, -0.231641, 0.0936437, -0.120603, 0.120603, 0.0936437, -0.231641, 0.13566, -0.0269598, -0.260559, -0.13566, -0.0269598, -0.260559, -0.120603, 0.0936437, 0.231641, -0.13566, -0.0269598, 0.260559, 0.13566, -0.0269598, 0.260559, 0.231641, 0.0936437, 0.120603, 0.260559, -0.0269598, 0.13566, 0.260559, -0.0269598, -0.13566, 0.0325639, -0.338049, -0.0325639),
		Vector3Array(0.0, -0.591133, 0.806574, 0.0, -0.591133, 0.806574, 0.0, -0.591133, 0.806574, -0.972436, 0.233168, 0.0, -0.972436, 0.233168, 0.0, -0.972436, 0.233168, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.806574, -0.591133, 0.0, 0.806574, -0.591133, 0.0, 0.806574, -0.591133, 0.0, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.806574, -0.591133, 0.0, -0.806574, -0.591133, 0.0, -0.806574, -0.591133, 0.0, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, 0.564988, -0.601314, 0.564988, 0.564988, -0.601314, 0.564988, 0.564988, -0.601314, 0.564988, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, -0.684715, 0.249659, 0.684715, -0.684715, 0.249659, 0.684715, -0.684715, 0.249659, 0.684715, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, 0.0, -0.591133, -0.806574, 0.0, -0.591133, -0.806574, 0.0, -0.591133, -0.806574, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.564988, -0.601314, -0.564988, 0.564988, -0.601314, -0.564988, 0.564988, -0.601314, -0.564988, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.684715, 0.249659, 0.684715, 0.684715, 0.249659, 0.684715, 0.684715, 0.249659, 0.684715, 0.684716, 0.249659, -0.684715, 0.684716, 0.249659, -0.684715, 0.684716, 0.249659, -0.684715, -0.684715, 0.249659, -0.684715, -0.684715, 0.249659, -0.684715, -0.684715, 0.249659, -0.684715, -0.564988, -0.601314, -0.564988, -0.564988, -0.601314, -0.564988, -0.564988, -0.601314, -0.564988, 0.0, 0.233168, -0.972436, 0.0, 0.233168, -0.972436, 0.0, 0.233168, -0.972436, 0.0, 0.233168, 0.972436, 0.0, 0.233168, 0.972436, 0.0, 0.233168, 0.972436, 0.972436, 0.233168, 0.0, 0.972436, 0.233168, 0.0, 0.972436, 0.233168, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -0.564988, -0.601314, 0.564988, -0.564988, -0.601314, 0.564988, -0.564988, -0.601314, 0.564988, 0.0, -0.591133, 0.806574, 0.0, -0.591133, 0.806574, 0.0, -0.591133, 0.806574, -0.972436, 0.233168, 0.0, -0.972436, 0.233168, 0.0, -0.972436, 0.233168, 0.0, 0.0, 1.0, 0.0, 0.806574, -0.591133, 0.0, 0.806574, -0.591133, 0.0, 0.806574, -0.591133, 0.0, -0.806574, -0.591133, 0.0, -0.806574, -0.591133, 0.0, -0.806574, -0.591133, 0.0, -0.684716, 0.249659, 0.684715, -0.684716, 0.249659, 0.684715, -0.684716, 0.249659, 0.684715, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, 0.0, -0.591133, -0.806574, 0.0, -0.591133, -0.806574, 0.0, -0.591133, -0.806574, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.684716, 0.249659, 0.684715, 0.684716, 0.249659, 0.684715, 0.684716, 0.249659, 0.684715, 0.684715, 0.249659, -0.684715, 0.684715, 0.249659, -0.684715, 0.684715, 0.249659, -0.684715, -0.684716, 0.249659, -0.684715, -0.684716, 0.249659, -0.684715, -0.684716, 0.249659, -0.684715, 0.0, 0.233168, -0.972437, 0.0, 0.233168, -0.972437, 0.0, 0.233168, -0.972437, 0.0, 0.233168, 0.972437, 0.0, 0.233168, 0.972437, 0.0, 0.233168, 0.972437, 0.972436, 0.233168, 0.0, 0.972436, 0.233168, 0.0, 0.972436, 0.233168, 0.0, 0.0, -1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 3.44128e-08, 0.707107, -0.707107, 1.0, 3.44128e-08, 0.707107, -0.707107, 1.0, 3.44128e-08, 0.707107, -0.707107, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -3.44128e-08, -0.707107, -0.707107, 1.0, -3.44128e-08, -0.707107, -0.707107, 1.0, -3.44128e-08, -0.707107, -0.707107, 1.0, -0.258234, -0.779217, -0.571083, 1.0, -0.258234, -0.779217, -0.571083, 1.0, -0.258234, -0.779217, -0.571083, 1.0, 3.44128e-08, -0.707107, 0.707107, 1.0, 3.44128e-08, -0.707107, 0.707107, 1.0, 3.44128e-08, -0.707107, 0.707107, 1.0, 0.707107, -0.707107, -1.72064e-08, 1.0, 0.707107, -0.707107, -1.72064e-08, 1.0, 0.707107, -0.707107, -1.72064e-08, 1.0, 0.120514, 0.965349, -0.231469, 1.0, 0.120514, 0.965349, -0.231469, 1.0, 0.120514, 0.965349, -0.231469, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -0.571083, -0.779217, 0.258234, 1.0, -0.571083, -0.779217, 0.258234, 1.0, -0.571083, -0.779217, 0.258234, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.120514, -0.965349, 0.231469, 1.0, 0.120514, -0.965349, 0.231469, 1.0, 0.120514, -0.965349, 0.231469, 1.0, 0.231469, -0.965349, -0.120514, 1.0, 0.231469, -0.965349, -0.120514, 1.0, 0.231469, -0.965349, -0.120514, 1.0, -0.120514, -0.965349, -0.231469, 1.0, -0.120514, -0.965349, -0.231469, 1.0, -0.120514, -0.965349, -0.231469, 1.0, 0.258234, -0.779217, 0.571083, 1.0, 0.258234, -0.779217, 0.571083, 1.0, 0.258234, -0.779217, 0.571083, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.571083, -0.779217, -0.258234, 1.0, 0.571083, -0.779217, -0.258234, 1.0, 0.571083, -0.779217, -0.258234, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.231468, 0.965349, -0.120514, 1.0, 0.231468, 0.965349, -0.120514, 1.0, 0.231468, 0.965349, -0.120514, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.231469, -0.965349, 0.120514, 1.0, 0.231469, -0.965349, 0.120514, 1.0, 0.231469, -0.965349, 0.120514, 1.0, 0.120514, -0.965349, -0.231469, 1.0, 0.120514, -0.965349, -0.231469, 1.0, 0.120514, -0.965349, -0.231469, 1.0, -0.231469, -0.965349, -0.120514, 1.0, -0.231469, -0.965349, -0.120514, 1.0, -0.231469, -0.965349, -0.120514, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.979075, 0.979075, 0.0209246, 0.0209246, 0.0209246, 0.979075, 0.0209246),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 6, 7, 84, 85, 87, 86, 88, 90, 89, 91, 93, 92, 94, 96, 95, 97, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 114, 113, 115, 117, 116, 118, 120, 119, 121, 123, 122, 124, 126, 125, 72, 73, 127)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Gem2" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.586752, -0.0345853, -1.50896)
