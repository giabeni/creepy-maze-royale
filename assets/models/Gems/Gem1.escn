[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec2 refraction_offset = vec2(0.2, 0.2);


void node_bsdf_glass(vec4 color, float roughness, float IOR, out vec3 albedo,
        out float alpha, out float specular_out, out float roughness_out,
        out float transmission_out, out float ior) {
    albedo = color.rgb;
    alpha = 0.0;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    transmission_out = 0.0;
    ior = IOR;
}


void refraction_fresnel(vec3 view_dir, vec3 normal, float ior, out float kr) {
// reference [https://www.scratchapixel.com/lessons/
// 3d-basic-rendering/introduction-to-shading/reflection-refraction-fresnel]
    float cosi = clamp(-1.0, 1.0, dot(view_dir, normal));
    float etai = 1.0, etat = ior;
    if (cosi > 0.0) {
        float tmp = etai;
        etai = etat;
        etat = tmp;
    }
    // Compute sini using Snell's law
    float sint = etai / etat * sqrt(max(0.0, 1.0 - cosi * cosi));
    // Total internal reflection
    if (sint >= 1.0) {
        kr = 1.0;
    }
    else {
        float cost = sqrt(max(0.0, 1.0 - sint * sint));
        cosi = abs(cosi);
        float Rs = ((etat * cosi) - (etai * cost))
                    / ((etat * cosi) + (etai * cost));
        float Rp = ((etai * cosi) - (etat * cost))
                    / ((etai * cosi) + (etat * cost));
        kr = (Rs * Rs + Rp * Rp) * 0.5;
    }
}

void vertex () {
}

void fragment () {
	
	// node: 'Glass BSDF'
	// type: 'ShaderNodeBsdfGlass'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.15676917135715485, 0.8000051975250244,
		0.12411732226610184, 1.0);
	float node0_in1_roughness = float(0.0);
	float node0_in2_ior = float(1.4500000476837158);
	vec3 node0_in3_normal = NORMAL;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_alpha;
	float node0_bsdf_out2_specular;
	float node0_bsdf_out3_roughness;
	float node0_bsdf_out4_transmission;
	float node0_bsdf_out5_ior;
	
	node_bsdf_glass(node0_in0_color, node0_in1_roughness, node0_in2_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_alpha, node0_bsdf_out2_specular,
		node0_bsdf_out3_roughness, node0_bsdf_out4_transmission, node0_bsdf_out5_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SPECULAR = node0_bsdf_out2_specular;
	ROUGHNESS = node0_bsdf_out3_roughness;
	NORMAL = node0_in3_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out4_transmission;
	refraction_fresnel(VERTEX, NORMAL, node0_bsdf_out5_ior, node0_bsdf_out1_alpha);
	EMISSION += textureLod(SCREEN_TEXTURE, SCREEN_UV - NORMAL.xy * refraction_offset
		, ROUGHNESS).rgb * (1.0 - node0_bsdf_out1_alpha);
	ALBEDO *= node0_bsdf_out1_alpha;
	ALPHA = 1.0;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cube"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(1.19831e-07, -0.239398, -0.25662, 0.0, 0.239398, -0.25662, 2.39663e-07, 0.239398, -0.25662, -7.98875e-08, 0.239398, 0.25662, -7.98875e-08, -0.239398, 0.25662, 5.99156e-08, -0.239398, 0.25662, -0.0956749, 0.239398, 0.160945, -0.0956747, -0.239398, -0.160945, -0.0956748, -0.239398, 0.160945, -1.99719e-08, 0.335073, -0.160945, -3.99438e-08, 0.335073, 0.160945, 1.99719e-07, 0.335073, -0.160945, 0.0956749, 0.239398, -0.160945, 0.0956748, -0.239398, 0.160945, 0.0956749, -0.239398, -0.160945, 0.0956749, -0.239398, -0.160945, 1.19831e-07, -0.335073, -0.160945, 1.19831e-07, -0.239398, -0.25662, 0.0956748, -0.239398, 0.160945, 5.99156e-08, -0.239398, 0.25662, 1.19831e-07, -0.335073, 0.160945, -7.98875e-08, -0.239398, 0.25662, -0.0956748, -0.239398, 0.160945, -3.99438e-08, -0.335073, 0.160945, 7.98875e-08, -0.239398, -0.25662, 7.98875e-08, -0.335073, -0.160945, -0.0956747, -0.239398, -0.160945, 2.39663e-07, 0.239398, -0.25662, 1.99719e-07, 0.335073, -0.160945, 0.0956749, 0.239398, -0.160945, -7.98875e-08, 0.239398, 0.25662, 0.0956747, 0.239398, 0.160945, -3.99438e-08, 0.335073, 0.160945, -0.0956749, 0.239398, 0.160945, -1.19831e-07, 0.239398, 0.25662, -1.19831e-07, 0.335073, 0.160945, -0.0956748, 0.239398, -0.160945, -1.99719e-08, 0.335073, -0.160945, 0.0, 0.239398, -0.25662, 0.0956748, -0.239398, 0.160945, 1.19831e-07, -0.335073, -0.160945, 0.0956749, -0.239398, -0.160945, 7.98875e-08, -0.335073, -0.160945, 1.19831e-07, -0.239398, -0.25662, 1.19831e-07, -0.335073, -0.160945, 2.39663e-07, 0.239398, -0.25662, 0.0956749, -0.239398, -0.160945, 1.19831e-07, -0.239398, -0.25662, -7.98875e-08, -0.239398, 0.25662, 1.19831e-07, -0.335073, 0.160945, 5.99156e-08, -0.239398, 0.25662, 0.0956747, 0.239398, 0.160945, 5.99156e-08, -0.239398, 0.25662, 0.0956748, -0.239398, 0.160945, -0.0956747, -0.239398, -0.160945, -3.99438e-08, -0.335073, 0.160945, -0.0956748, -0.239398, 0.160945, -1.19831e-07, 0.239398, 0.25662, -0.0956748, -0.239398, 0.160945, -7.98875e-08, -0.239398, 0.25662, -0.0956748, 0.239398, -0.160945, 7.98875e-08, -0.239398, -0.25662, -0.0956747, -0.239398, -0.160945, -3.99438e-08, 0.335073, 0.160945, 0.0956749, 0.239398, -0.160945, 1.99719e-07, 0.335073, -0.160945, 0.0, 0.239398, -0.25662, 1.99719e-07, 0.335073, -0.160945, 2.39663e-07, 0.239398, -0.25662, -1.19831e-07, 0.335073, 0.160945, -7.98875e-08, 0.239398, 0.25662, -3.99438e-08, 0.335073, 0.160945, -1.99719e-08, 0.335073, -0.160945, -0.0956749, 0.239398, 0.160945, -1.19831e-07, 0.335073, 0.160945, 1.19831e-07, -0.335073, 0.160945, 7.98875e-08, -0.335073, -0.160945, 1.19831e-07, -0.335073, -0.160945, 1.19831e-07, -0.239398, -0.25662, 7.98875e-08, -0.239398, -0.25662, 0.0, 0.239398, -0.25662, -7.98875e-08, 0.239398, 0.25662, -1.19831e-07, 0.239398, 0.25662, -7.98875e-08, -0.239398, 0.25662, -0.0956749, 0.239398, 0.160945, -0.0956748, 0.239398, -0.160945, -0.0956747, -0.239398, -0.160945, -1.99719e-08, 0.335073, -0.160945, -1.19831e-07, 0.335073, 0.160945, -3.99438e-08, 0.335073, 0.160945, 0.0956749, 0.239398, -0.160945, 0.0956747, 0.239398, 0.160945, 0.0956748, -0.239398, 0.160945, 0.0956748, -0.239398, 0.160945, 1.19831e-07, -0.335073, 0.160945, 1.19831e-07, -0.335073, -0.160945, 7.98875e-08, -0.239398, -0.25662, 2.39663e-07, 0.239398, -0.25662, 0.0956749, 0.239398, -0.160945, 0.0956749, -0.239398, -0.160945, -7.98875e-08, -0.239398, 0.25662, -3.99438e-08, -0.335073, 0.160945, 1.19831e-07, -0.335073, 0.160945, 0.0956747, 0.239398, 0.160945, -7.98875e-08, 0.239398, 0.25662, 5.99156e-08, -0.239398, 0.25662, -0.0956747, -0.239398, -0.160945, 7.98875e-08, -0.335073, -0.160945, -3.99438e-08, -0.335073, 0.160945, -1.19831e-07, 0.239398, 0.25662, -0.0956749, 0.239398, 0.160945, -0.0956748, -0.239398, 0.160945, -0.0956748, 0.239398, -0.160945, 0.0, 0.239398, -0.25662, 7.98875e-08, -0.239398, -0.25662, -3.99438e-08, 0.335073, 0.160945, 0.0956747, 0.239398, 0.160945, 0.0956749, 0.239398, -0.160945, 0.0, 0.239398, -0.25662, -1.99719e-08, 0.335073, -0.160945, 1.99719e-07, 0.335073, -0.160945, -1.19831e-07, 0.335073, 0.160945, -1.19831e-07, 0.239398, 0.25662, -7.98875e-08, 0.239398, 0.25662, -1.99719e-08, 0.335073, -0.160945, -0.0956748, 0.239398, -0.160945, -0.0956749, 0.239398, 0.160945, -3.99438e-08, -0.335073, 0.160945),
		Vector3Array(0.123401, 2.45792e-07, -0.992357, 0.123401, 2.45792e-07, -0.992357, 0.123401, 2.45792e-07, -0.992357, -0.39219, -9.76464e-08, 0.919884, -0.39219, -9.76464e-08, 0.919884, -0.39219, -9.76464e-08, 0.919884, -1.0, -1.55611e-07, -2.41714e-07, -1.0, -1.55611e-07, -2.41714e-07, -1.0, -1.55611e-07, -2.41714e-07, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, -1.08928e-07, 1.45029e-07, 1.0, -1.08928e-07, 1.45029e-07, 1.0, -1.08928e-07, 1.45029e-07, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, -0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, 0.57735, -0.57735, 0.57735, -0.577351, -0.57735, 0.57735, -0.577351, -0.57735, 0.57735, -0.577351, -0.57735, 0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, -0.57735, 0.577351, 0.57735, -0.57735, 0.577351, 0.57735, -0.57735, 0.577351, 0.57735, -0.57735, 0.577349, 0.577351, 0.577351, 0.577349, 0.577351, 0.577351, 0.577349, 0.577351, 0.577351, -0.577351, 0.57735, 0.57735, -0.577351, 0.57735, 0.57735, -0.577351, 0.57735, 0.57735, -0.57735, 0.577351, -0.57735, -0.57735, 0.577351, -0.57735, -0.57735, 0.577351, -0.57735, 0.707107, -0.707107, 1.28302e-07, 0.707107, -0.707107, 1.28302e-07, 0.707107, -0.707107, 1.28302e-07, 0.0, -0.707107, -0.707107, 0.0, -0.707107, -0.707107, 0.0, -0.707107, -0.707107, 0.707107, 0.0, -0.707106, 0.707107, 0.0, -0.707106, 0.707107, 0.0, -0.707106, -0.366474, -0.657912, 0.657912, -0.366474, -0.657912, 0.657912, -0.366474, -0.657912, 0.657912, 0.707107, -1.15008e-07, 0.707107, 0.707107, -1.15008e-07, 0.707107, 0.707107, -1.15008e-07, 0.707107, -0.707107, -0.707107, -1.71069e-07, -0.707107, -0.707107, -1.71069e-07, -0.707107, -0.707107, -1.71069e-07, -0.707107, -2.30016e-07, 0.707106, -0.707107, -2.30016e-07, 0.707106, -0.707107, -2.30016e-07, 0.707106, -0.707106, 5.75039e-08, -0.707107, -0.707106, 5.75039e-08, -0.707107, -0.707106, 5.75039e-08, -0.707107, 0.707107, 0.707107, 5.13206e-07, 0.707107, 0.707107, 5.13206e-07, 0.707107, 0.707107, 5.13206e-07, 0.11413, 0.702486, -0.702487, 0.11413, 0.702486, -0.702487, 0.11413, 0.702486, -0.702487, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, 0.0, 0.707107, 0.707107, -0.707107, 0.707107, -2.13836e-07, -0.707107, 0.707107, -2.13836e-07, -0.707107, 0.707107, -2.13836e-07, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.85764e-07, -1.0, 0.0, 1.85764e-07, -1.0, 0.0, 1.85764e-07, -1.0, 0.598001, -2.23333e-07, 0.801495, 0.598001, -2.23333e-07, 0.801495, 0.598001, -2.23333e-07, 0.801495, -1.0, -1.24489e-07, -2.90057e-07, -1.0, -1.24489e-07, -2.90057e-07, -1.0, -1.24489e-07, -2.90057e-07, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.86733e-07, 5.80115e-07, 1.0, 1.86733e-07, 5.80115e-07, 1.0, 1.86733e-07, 5.80115e-07, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.0, 0.0, -0.707107, -0.707107, 0.707107, 2.91232e-08, -0.707106, 0.707107, 2.91232e-08, -0.707106, 0.707107, 2.91232e-08, -0.707106, 0.0, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.0, -0.707107, 0.707107, 0.707106, 1.87516e-07, 0.707108, 0.707106, 1.87516e-07, 0.707108, 0.707106, 1.87516e-07, 0.707108, -0.707107, -0.707107, -2.56603e-07, -0.707107, -0.707107, -2.56603e-07, -0.707107, -0.707107, -2.56603e-07, -0.707107, -3.23291e-08, 0.707106, -0.707107, -3.23291e-08, 0.707106, -0.707107, -3.23291e-08, 0.707106, -0.707107, -3.58599e-10, -0.707107, -0.707107, -3.58599e-10, -0.707107, -0.707107, -3.58599e-10, -0.707107, 0.707107, 0.707107, 4.27672e-07, 0.707107, 0.707107, 4.27672e-07, 0.707107, 0.707107, 4.27672e-07, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.0, 0.707107, -0.707107, 0.627639, 0.550486, 0.550486, 0.627639, 0.550486, 0.550486, 0.627639, 0.550486, 0.550486, -0.707107, 0.707107, -2.13836e-07, -0.707107, 0.707107, -2.13836e-07, -0.707107, 0.707107, -2.13836e-07, 0.0, -1.0, 0.0),
		FloatArray(0.0, 0.0, 0.0, -1.0, -2.46624e-07, -1.0, -2.78353e-07, 1.0, -2.46624e-07, -1.0, -2.78353e-07, 1.0, 0.0, 0.0, 0.0, -1.0, -2.85373e-07, 1.0, -1.55173e-08, 1.0, -2.85373e-07, 1.0, -1.55173e-08, 1.0, -1.55611e-07, 1.0, -9.33665e-08, 1.0, -1.55611e-07, 1.0, -9.33665e-08, 1.0, -1.55611e-07, 1.0, -9.33665e-08, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.08928e-07, 1.0, 2.17855e-07, 1.0, 1.08928e-07, 1.0, 2.17855e-07, 1.0, 1.08928e-07, 1.0, 2.17855e-07, 1.0, -0.707107, -0.707107, -7.19295e-07, 1.0, -0.707107, -0.707107, -7.19295e-07, 1.0, -0.707107, -0.707107, -7.19295e-07, 1.0, -0.707107, 2.89087e-07, 0.707107, 1.0, -0.707107, 2.89087e-07, 0.707107, 1.0, -0.707107, 2.89087e-07, 0.707107, 1.0, -0.707106, 5.16191e-08, -0.707107, 1.0, -0.707106, 5.16191e-08, -0.707107, 1.0, -0.707106, 5.16191e-08, -0.707107, 1.0, 8.60318e-08, -0.707107, 0.707107, 1.0, 8.60318e-08, -0.707107, 0.707107, 1.0, 8.60318e-08, -0.707107, 0.707107, 1.0, -3.64039e-07, 0.707107, 0.707107, 1.0, -3.64039e-07, 0.707107, 0.707107, 1.0, -3.64039e-07, 0.707107, 0.707107, 1.0, 0.707107, 2.15666e-07, -0.707106, 1.0, 0.707108, 2.15666e-07, -0.707106, 1.0, 0.707108, 2.15666e-07, -0.707106, 1.0, 0.707106, 2.50079e-07, 0.707107, 1.0, 0.707106, 2.50079e-07, 0.707107, 1.0, 0.707106, 2.50079e-07, 0.707108, 1.0, 0.707107, 0.707107, 8.05326e-07, 1.0, 0.707107, 0.707107, 8.05327e-07, 1.0, 0.707107, 0.707107, 8.05327e-07, 1.0, -1.71735e-07, 9.71062e-09, 1.0, 1.0, -1.71735e-07, 9.71062e-09, 1.0, 1.0, -1.71735e-07, 9.71062e-09, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 2.49627e-07, 1.0, 2.49627e-07, 1.0, 2.49627e-07, 1.0, 2.49627e-07, 1.0, 2.49627e-07, 1.0, 2.49627e-07, 1.0, -0.872073, -0.00359497, -0.489362, 1.0, 0.0, 0.0, 0.0, -1.0, -0.872073, -0.00359497, -0.489362, 1.0, -1.83216e-07, 1.0, 3.45861e-07, 1.0, -1.83216e-07, 1.0, 3.45861e-07, 1.0, -1.83216e-07, 1.0, 3.45861e-07, 1.0, 2.48269e-07, -6.34126e-09, -1.0, 1.0, 2.48269e-07, -6.34126e-09, -1.0, 1.0, 2.48269e-07, -6.34126e-09, -1.0, 1.0, -1.10992e-07, 1.0, 2.143e-07, 1.0, -1.10992e-07, 1.0, 2.143e-07, 1.0, -1.10992e-07, 1.0, 2.14299e-07, 1.0, -1.1495e-07, 1.0, 1.96272e-07, 1.0, -1.1495e-07, 1.0, 1.96272e-07, 1.0, -1.1495e-07, 1.0, 1.96272e-07, 1.0, -7.35166e-07, 9.38273e-09, 1.0, 1.0, -7.35166e-07, 9.38273e-09, 1.0, 1.0, -7.35166e-07, 9.38273e-09, 1.0, 1.0, -0.989674, 0.018672, -0.142116, 1.0, 0.0, 0.0, 0.0, -1.0, -0.989674, 0.018672, -0.142116, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 3.06319e-07, 3.90947e-09, -1.0, 1.0, 3.06319e-07, 3.90947e-09, -1.0, 1.0, 3.06319e-07, 3.90947e-09, -1.0, 1.0, -3.72274e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.66851e-07, -1.0, -1.85764e-07, 1.0, 1.66851e-07, -1.0, -1.85764e-07, 1.0, 0.0, 0.0, 0.0, -1.0, -9.53889e-09, 1.0, 2.85763e-07, 1.0, -9.53889e-09, 1.0, 2.85763e-07, 1.0, 0.0, 0.0, 0.0, -1.0, -1.24489e-07, 1.0, 1.24489e-07, 1.0, -1.24489e-07, 1.0, 1.24489e-07, 1.0, -1.24489e-07, 1.0, 1.24489e-07, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.86733e-07, 1.0, 3.73466e-07, 1.0, -1.86733e-07, 1.0, 3.73466e-07, 1.0, -1.86733e-07, 1.0, 3.73466e-07, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.42798e-07, 1.0, 1.83985e-07, 1.0, 1.42798e-07, 1.0, 1.83985e-07, 1.0, 1.42798e-07, 1.0, 1.83985e-07, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -2.80424e-07, 1.0, 1.52366e-08, 1.0, -2.80424e-07, 1.0, 1.52366e-08, 1.0, -2.80424e-07, 1.0, 1.52366e-08, 1.0, 3.66617e-07, -3.72517e-09, -1.0, 1.0, 3.66617e-07, -3.72517e-09, -1.0, 1.0, 3.66617e-07, -3.72517e-09, -1.0, 1.0, -1.47349e-07, 1.0, -1.01629e-07, 1.0, -1.47349e-07, 1.0, -1.01629e-07, 1.0, -1.47349e-07, 1.0, -1.01629e-07, 1.0, -1.79206e-07, 1.0, 1.78699e-07, 1.0, -1.79206e-07, 1.0, 1.78699e-07, 1.0, -1.79206e-07, 1.0, 1.78699e-07, 1.0, -6.03312e-07, -1.50695e-09, 1.0, 1.0, -6.03312e-07, -1.50695e-09, 1.0, 1.0, -6.03312e-07, -1.50695e-09, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, -0.778504, 0.443808, 0.443808, 1.0, -0.778504, 0.443808, 0.443808, 1.0, 3.01656e-07, -7.53353e-10, -1.0, 1.0, 3.01656e-07, -7.53353e-10, -1.0, 1.0, 3.01656e-07, -7.53353e-10, -1.0, 1.0, -3.72274e-07, 0.0, 1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 65, 64, 66, 68, 67, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 80, 79, 81, 83, 82, 84, 86, 85, 87, 89, 88, 90, 92, 91, 93, 95, 94, 42, 43, 96, 97, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 114, 113, 115, 117, 116, 118, 120, 119, 121, 123, 122, 124, 126, 125, 75, 76, 127)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Gem1" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, -0.411736, -0.0835508, -0.74594)
